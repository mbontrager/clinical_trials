minage)) %>%
mutate(maxage = ifelse(grepl("^[0-9]+ month.*$", Age),
gsub("^[0-9]+ months? to ([0-9]+) year.*", "\\1", Age),
maxage)) %>%
mutate(maxage = ifelse(grepl("^.*to [0-9]+ month.*$", maxage),
gsub("^.*to ([0-9]+) month.*$", "\\1", maxage),
maxage)) %>%
mutate(maxage = ifelse(grepl("and older", maxage),
100,
maxage))
a <- filter(CTstudies, grepl("[a-zA-Z]+", maxage))
View(a)
View(a)
CTstudies <- read_tsv( "raw_data/CTstudy_fieldsTXT.txt", trim_ws = TRUE)
CTstudies$Age <- tolower(CTstudies$Age)
CTstudies <- mutate(CTstudies, minage = ifelse(grepl(" years? to ", Age),
gsub("^([0-9]+) years?.*", "\\1", Age),
NA)) %>%
mutate(maxage = ifelse(grepl(" years? to ", Age),
gsub(".*years? to ([0-9]+).*", "\\1", Age),
NA)) %>%
mutate(minage = ifelse(grepl("^up to ", Age),
0,
minage)) %>%
mutate(maxage = ifelse(grepl("^up to ", Age),
gsub("^up to ([0-9]+) years.*", "\\1", Age),
maxage)) %>%
mutate(minage = ifelse(grepl(" and older", Age),
gsub("^([0-9]+) year.*", "\\1", Age),
minage)) %>%
mutate(maxage = ifelse(grepl(" and older", Age),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^child, adult, senior$", Age),
0,
minage)) %>%
mutate(maxage = ifelse(grepl("^child, adult, senior$", Age),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^[0-9]+ month.*$", Age),
as.numeric(gsub("^([0-9]+) month.*", "\\1", Age)) / 12,
minage)) %>%
mutate(maxage = ifelse(grepl("^[0-9]+ month.*$", Age),
gsub("^[0-9]+ months? to ([0-9]+) year.*", "\\1", Age),
maxage)) %>%
mutate(maxage = ifelse(grepl("^.*to [0-9]+ month.*$", maxage),
gsub("^.*to ([0-9]+) month.*$", "\\1", maxage),
maxage)) %>%
mutate(maxage = ifelse(grepl("and older", maxage),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^([0-9]+) day.*$", Age),
as.numeric(gsub("^([0-9]+) day.*", "\\1", Age)) / 365,
minage)) %>%
mutate(maxage = ifelse(grepl("to [0-9]+ day.*$", Age),
as.numeric(gsub(".*to ([0-9]+) day.*", "\\1", Age)) / 365,
maxage))
a <- filter(CTstudies, grepl("[a-zA-Z]+", maxage))
a <- filter(CTstudies, grepl("[a-zA-Z]+", minage))
View(a)
1/6
CTstudies <- read_tsv( "raw_data/CTstudy_fieldsTXT.txt", trim_ws = TRUE)
# Get the min and max age for each trial
CTstudies$Age <- tolower(CTstudies$Age)
# Some ages are in months and days. Convert to years.
CTstudies <- mutate(CTstudies, minage = ifelse(grepl(" years? to ", Age),
gsub("^([0-9]+) years?.*", "\\1", Age),
NA)) %>%
mutate(maxage = ifelse(grepl(" years? to ", Age),
gsub(".*years? to ([0-9]+).*", "\\1", Age),
NA)) %>%
mutate(minage = ifelse(grepl("^up to ", Age),
0,
minage)) %>%
mutate(maxage = ifelse(grepl("^up to ", Age),
gsub("^up to ([0-9]+) years.*", "\\1", Age),
maxage)) %>%
mutate(minage = ifelse(grepl(" and older", Age),
gsub("^([0-9]+) year.*", "\\1", Age),
minage)) %>%
mutate(maxage = ifelse(grepl(" and older", Age),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^child, adult, senior$", Age),
0,
minage)) %>%
mutate(maxage = ifelse(grepl("^child, adult, senior$", Age),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^[0-9]+ month.*$", Age),
as.numeric(gsub("^([0-9]+) month.*", "\\1", Age)) / 12,
minage)) %>%
mutate(maxage = ifelse(grepl("^[0-9]+ month.*$", Age),
gsub("^[0-9]+ months? to ([0-9]+) year.*", "\\1", Age),
maxage)) %>%
mutate(maxage = ifelse(grepl("^.*to [0-9]+ month.*$", maxage),
gsub("^.*to ([0-9]+) month.*$", "\\1", maxage),
maxage)) %>%
mutate(maxage = ifelse(grepl("and older", maxage),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^([0-9]+) day.*$", Age),
as.numeric(gsub("^([0-9]+) day.*", "\\1", Age)) / 365,
minage)) %>%
mutate(maxage = ifelse(grepl("to [0-9]+ day.*$", Age),
as.numeric(gsub(".*to ([0-9]+) day.*", "\\1", Age)) / 365,
maxage)) %>%
mutate(minage = ifelse(grepl("8 weeks", minage),
0.17,
minage))
a <- filter(CTstudies, grepl("[a-zA-Z]+", minage))
a <- filter(CTstudies, is.na(minage))
a <- filter(CTstudies, is.na(maxage))
View(a)
CTstudies <- read_tsv( "raw_data/CTstudy_fieldsTXT.txt", trim_ws = TRUE)
# Get the min and max age for each trial
CTstudies$Age <- tolower(CTstudies$Age)
# Some ages are in months and days. Convert to years.
CTstudies <- mutate(CTstudies, minage = ifelse(grepl(" years? to ", Age),
gsub("^([0-9]+) years?.*", "\\1", Age),
NA)) %>%
mutate(maxage = ifelse(grepl(" years? to ", Age),
gsub(".*years? to ([0-9]+).*", "\\1", Age),
NA)) %>%
mutate(minage = ifelse(grepl("^up to ", Age),
0,
minage)) %>%
mutate(maxage = ifelse(grepl("^up to ", Age),
gsub("^up to ([0-9]+) years.*", "\\1", Age),
maxage)) %>%
mutate(minage = ifelse(grepl(" and older", Age),
gsub("^([0-9]+) year.*", "\\1", Age),
minage)) %>%
mutate(maxage = ifelse(grepl(" and older", Age),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^child, adult, senior$", Age),
0,
minage)) %>%
mutate(maxage = ifelse(grepl("^child, adult, senior$", Age),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^[0-9]+ month.*$", Age),
as.numeric(gsub("^([0-9]+) month.*", "\\1", Age)) / 12,
minage)) %>%
mutate(maxage = ifelse(grepl("^[0-9]+ month.*$", Age),
gsub("^[0-9]+ months? to ([0-9]+) year.*", "\\1", Age),
maxage)) %>%
mutate(maxage = ifelse(grepl("^.*to [0-9]+ month.*$", maxage),
gsub("^.*to ([0-9]+) month.*$", "\\1", maxage),
maxage)) %>%
mutate(maxage = ifelse(grepl("and older", maxage),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^([0-9]+) day.*$", Age),
as.numeric(gsub("^([0-9]+) day.*", "\\1", Age)) / 365,
minage)) %>%
mutate(maxage = ifelse(grepl("to [0-9]+ day.*$", Age),
as.numeric(gsub(".*to ([0-9]+) day.*", "\\1", Age)) / 365,
maxage)) %>%
mutate(minage = ifelse(grepl("8 weeks", minage),
0.17,
minage)) %>%
mutate(maxage = ifelse(grepl("years", maxage),
3,
maxage))
CTstudies$minage <- as.numeric(CTstudies$minage)
CTstudies$maxage <- as.numeric(CTstudies$maxage)
a <- filter(CTstudies, is.na(maxage))
a <- filter(CTstudies, is.na(maxage))
View(a)
# Read data
CTstudies <- read_tsv( "raw_data/CTstudy_fieldsTXT.txt", trim_ws = TRUE)
# Get the min and max age for each trial
CTstudies$Age <- tolower(CTstudies$Age)
# Some ages are in months and days. Convert to years.
CTstudies <- mutate(CTstudies, minage = ifelse(grepl(" years? to ", Age),
gsub("^([0-9]+) years?.*", "\\1", Age),
NA)) %>%
mutate(maxage = ifelse(grepl(" years? to ", Age),
gsub(".*years? to ([0-9]+).*", "\\1", Age),
NA)) %>%
mutate(minage = ifelse(grepl("^up to ", Age),
0,
minage)) %>%
mutate(maxage = ifelse(grepl("^up to ", Age),
gsub("^up to ([0-9]+) years.*", "\\1", Age),
maxage)) %>%
mutate(minage = ifelse(grepl(" and older", Age),
gsub("^([0-9]+) year.*", "\\1", Age),
minage)) %>%
mutate(maxage = ifelse(grepl(" and older", Age),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^child, adult, senior$", Age),
0,
minage)) %>%
mutate(maxage = ifelse(grepl("^child, adult, senior$", Age),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^[0-9]+ month.*$", Age),
as.numeric(gsub("^([0-9]+) month.*", "\\1", Age)) / 12,
minage)) %>%
mutate(maxage = ifelse(grepl("^[0-9]+ month.*$", Age),
gsub("^[0-9]+ months? to ([0-9]+) year.*", "\\1", Age),
maxage)) %>%
mutate(maxage = ifelse(grepl("^.*to [0-9]+ month.*$", maxage),
gsub("^.*to ([0-9]+) month.*$", "\\1", maxage),
maxage)) %>%
mutate(maxage = ifelse(grepl("and older", maxage),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^([0-9]+) day.*$", Age),
as.numeric(gsub("^([0-9]+) day.*", "\\1", Age)) / 365,
minage)) %>%
mutate(maxage = ifelse(grepl("to [0-9]+ day.*$", Age),
as.numeric(gsub(".*to ([0-9]+) day.*", "\\1", Age)) / 365,
maxage)) %>%
mutate(minage = ifelse(grepl("8 weeks", minage),
0.17,
minage)) %>%
mutate(maxage = ifelse(is.na(maxage),
3,
maxage))
CTstudies$minage <- as.numeric(CTstudies$minage)
CTstudies$maxage <- as.numeric(CTstudies$maxage)
# Read data
CTstudies <- read_tsv( "raw_data/CTstudy_fieldsTXT.txt", trim_ws = TRUE)
# Get the min and max age for each trial
CTstudies$Age <- tolower(CTstudies$Age)
# Some ages are in months and days. Convert to years.
CTstudies <- mutate(CTstudies, minage = ifelse(grepl(" years? to ", Age),
gsub("^([0-9]+) years?.*", "\\1", Age),
NA)) %>%
mutate(maxage = ifelse(grepl(" years? to ", Age),
gsub(".*years? to ([0-9]+).*", "\\1", Age),
NA)) %>%
mutate(minage = ifelse(grepl("^up to ", Age),
0,
minage)) %>%
mutate(maxage = ifelse(grepl("^up to ", Age),
gsub("^up to ([0-9]+) years.*", "\\1", Age),
maxage)) %>%
mutate(minage = ifelse(grepl(" and older", Age),
gsub("^([0-9]+) year.*", "\\1", Age),
minage)) %>%
mutate(maxage = ifelse(grepl(" and older", Age),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^child, adult, senior$", Age),
0,
minage)) %>%
mutate(maxage = ifelse(grepl("^child, adult, senior$", Age),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^[0-9]+ month.*$", Age),
as.numeric(gsub("^([0-9]+) month.*", "\\1", Age)) / 12,
minage)) %>%
mutate(maxage = ifelse(grepl("^[0-9]+ month.*$", Age),
gsub("^[0-9]+ months? to ([0-9]+) year.*", "\\1", Age),
maxage)) %>%
mutate(maxage = ifelse(grepl("^.*to [0-9]+ month.*$", maxage),
gsub("^.*to ([0-9]+) month.*$", "\\1", maxage),
maxage)) %>%
mutate(maxage = ifelse(grepl("and older", maxage),
100,
maxage)) %>%
mutate(minage = ifelse(grepl("^([0-9]+) day.*$", Age),
as.numeric(gsub("^([0-9]+) day.*", "\\1", Age)) / 365,
minage)) %>%
mutate(maxage = ifelse(grepl("to [0-9]+ day.*$", Age),
as.numeric(gsub(".*to ([0-9]+) day.*", "\\1", Age)) / 365,
maxage)) %>%
mutate(minage = ifelse(grepl("8 weeks", minage),
0.17,
minage)) %>%
mutate(maxage = ifelse(is.na(maxage),
3,
maxage))
CTstudies$minage <- as.numeric(CTstudies$minage)
CTstudies$maxage <- as.numeric(CTstudies$maxage)
a <- filter(CTstudies, is.na(maxage))
a <- filter(CTstudies, is.na(minage))
View(CTstudies)
CTstudies <- mutate(CTstudies, minage = round(minage, 2))
CTstudies <- mutate(CTstudies, maxage = round(maxage, 2))
View(CTstudies)
View(CTstudies)
write_tsv(CTstudies, "output_data/2017-01-24_CTstudies.tsv")
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
patient.data <- c("a", "b", "Ann Type Hit")
d <- tolower(patient.data[3])
d <- strsplit(d)
d <- strsplit(d, c(" ", ",", "|"))
d
d <- tolower(patient.data[3])
d <- unlist(strsplit(d, c(" ", ",", "|")))
d <- paste(d, "|")
d <- paste(d, "|", collapse = "")
d <- tolower(patient.data[3])
d <- unlist(strsplit(d, c(" ", ",", "|")))
d <- paste(d, "|", collapse = "")
d <- tolower(patient.data[3])
d <- unlist(strsplit(d, c(" ", ",", "|")))
d <- paste(d, "|", collapse = "", sep = "")
d <- tolower(patient.data[3])
d <- unlist(strsplit(d, c(" ", ",", "|")))
d <- paste(d, "&", collapse = "", sep = "")
test <- c("there ann is a man type for hiit")
grepl(d, test)
test <- c("there ann is a man type for hit")
grepl(d, test)
d <- "ann&type&hit"
grepl(d, test)
d <- tolower(patient.data[3])
d <- unlist(strsplit(d, c(" ", ",", "|")))
d
all(d %in% test)
grepl(d, test)
d <- unlist(strsplit(d, c(" ", ",", "|")))
d <- tolower(patient.data[3])
d <- unlist(strsplit(d, c(" ", ",", "|")))
d <- paste(d, collapse = "|", sep = "")
runApp('app')
a <- filter(CTstudies, grepl("lab", Interventions))
View(a)
runApp('app')
runApp('app')
sapply(test.data$item, function(x) any(sapply(fruit, str_detect, string = x)))
d <- tolower(patient.data[3])
sapply(test, function(x) all(sapply(d, str_detect, string = x)))
sapply(d, function(x) all(sapply(test, str_detect, string = x)))
d <- unlist(strsplit(d, c(" ", ",", "|")))
sapply(d, function(x) all(sapply(test, str_detect, string = x)))
sapply(test, function(x) all(sapply(d, str_detect, string = x)))
test
test <- "there ann is a man type for hiit"
sapply(test, function(x) all(sapply(d, str_detect, string = x)))
test <- "there ann is a man type for hit"
sapply(test, function(x) all(sapply(d, str_detect, string = x)))
a <- sapply(test, function(x) all(sapply(d, str_detect, string = x)))
a
runApp('app')
runApp('app')
View(CTstudies)
runApp('app')
View(CTstudies)
runApp('app')
runApp('app')
a <- read_tsv("output_data/2017-01-24_CTstudies.tsv")
interventions <- list()
for (i in 1:nrow(CTstudies)){
interventions[i] <- str_split(CTstudies$Conditions[i], "\\|")
}
a <- cancer.types %>%
unlist() %>%
tolower() %>%
count()
a <- interventions %>%
unlist() %>%
tolower() %>%
count()
View(a)
interventions <- list()
for (i in 1:nrow(CTstudies)){
interventions[i] <- str_split(CTstudies$Interventions[i], "\\|")
}
a <- interventions %>%
unlist() %>%
tolower() %>%
count()
View(a)
unique(CTstudies$`Study Types`)
runApp('app')
runApp('app')
runQuery <- function(ct, patient.data) {
body <- paste0('{"size" : 10000,',
'"query": {',
'"bool": {',
'"filter": {',
'"geo_distance": {',
'"distance": "', patient.data[6],'mi",',
'"facility.geo": {',
'"lat": ', patient.data[4],',',
'"lon": ', patient.data[5],
'}}}}}}')
out <- Search(index="trialsgeo", body = body )
count <- length( out$hits$hits )
id <- unlist(lapply( 1:count, function(i) try( out$hits$hits[[i]]$`_source`$nctId )))
id.unique.geo <- unique(id)
CT <- filter(ct, `NCT Number` %in% id.unique.geo)
# Filter by age
if (!patient.data[1] == ""){
age <- as.integer(patient.data[1])
CT <- filter(CT, minage <= age  & age <= maxage)
}
# Filter by gender
if (!patient.data[2] == ""){
g <- patient.data[2]
if (g == "male"){
CT <- filter(CT, !(Gender == "female"))
}
if (g == "female"){
CT <- filter(CT, !(Gender == "male"))
}
}
# Filter by Trial Type
if (!patient.data[3] == ""){
x <- patient.data[7]
if (x == "Interventional"){
CT <- filter(CT, `Study Types` == x | `Study Types` == "Expanded Access")
} else if (x == "Observational"){
CT <- filter(CT, `Study Types` == x)
}
}
# Filter by type
if (!patient.data[7] == ""){
d <- tolower(patient.data[3])
d <- unlist(strsplit(d, c(" ", ",", "|")))
# Return entries where all search terms are in conditions
CT <- filter(CT, sapply(Conditions, function(x) all(sapply(d, str_detect, string = x))))
}
}
runApp('app')
runApp('app')
runApp('app')
runApp('app')
View(CTstudies)
a <- filter(CTstudies, grepl("cancer", tolower(Conditions))
)
View(a)
a <- filter(CTstudies, !grepl("cancer", tolower(Conditions))
)
View(a)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
shiny::runApp('app')
CTstudies <- read_tsv( "../output_data/2017-01-24_CTstudies.tsv")
CTstudies <- read_tsv( "output_data/2017-01-24_CTstudies.tsv")
View(CTstudies)
a <- filer(CTstudies, grepl("MLN0128", Interventions))
a <- filter(CTstudies, grepl("MLN0128", Interventions))
View(a)
runApp('app')
View(CTstudies)
runApp('app')
View(a)
View(CTstudies)
runApp('app')
View(CTstudies)
runApp('app')
library(devtools)
install_github("sachsmc/rclinicaltrials")
require(rclinicaltrials)
knitr::opts_chunk$set(fig.width=4.5, fig.height=3, echo=TRUE, warning=FALSE,
message=FALSE, comment = NA)
require(tidyverse)
require(stringr)
#library(devtools)
#install_github("sachsmc/rclinicaltrials")
require(rclinicaltrials)
z <- clinicaltrials_search(query = 'breast+cancer')
str(z)
View(z)
clinicaltrials_count(query = c("type=Intr", "cond=cancer"))
y <- clinicaltrials_download(query = 'myeloma', count = 10, include_results = TRUE)
head(advanced_search_terms)
a <- advanced_search_terms
View(a)
clinicaltrials_count(query = c("type=Intr", "cond=cancer", "recr=Recruiting"))
y$study_information
y$study_information$locations
clinicaltrials_count(query = c("type=Intr", "cond=cancer", "recr=Recruiting", "locn=United States"))
y$study_information$study_info
b <- y$study_information$study_info
View(b)
clinicaltrials_count(query = c("type=Intr", "cond=cancer", "recr=Open", "locn=United States"))
y <- clinicaltrials_download(query = c("type=Intr", "cond=cancer", "recr=Open", "locn=United States"),
count = 10,
include_results = TRUE)
y$study_information$arms
b <- y$study_information$arms
View(b)
b <- y$study_information$study_info
View(b)
b <- y$study_information$locations
View(b)
b <- y$study_information$interventions
View(b)
b <- y$study_information$outcomes
View(b)
b <- y$study_information$textblocks
b <- y$study_information$study_info
View(b)
b <- y$study_results
b <- y$study_results$baseline_data
b <- y$study_information$textblocks
b <- y$study_information$textblocks
b
b <- y$study_information$arms
View(b)
b <- y$study_information$locations
shiny::runApp('app')
runApp('app')
